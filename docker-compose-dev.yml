version: '3.8'

services:
  db:
    image: mysql:8.0 # Or mariadb:latest, mysql:5.7
    container_name: wordpress-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql # Persistent volume for database data

  wordpress:
    depends_on:
      - db
    image: wordpress:latest # Or wordpress:6.5.4-php8.2-apache for a specific version
    container_name: wordpress-app
    restart: always
    ports:
      - "8000:80" # Map host port 8000 to container port 80 (WordPress default)
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
      WORDPRESS_DEBUG: ${WORDPRESS_DEBUG}
    volumes:
      # Mount your local wp-content directory into the container
      - ./wp-content:/var/www/html/wp-content
      # Optional: if you have a custom wp-config.php outside of wp-content:
      # - ./wp-config.php:/var/www/html/wp-config.php
    # If you need custom PHP settings (e.g., upload limits), create a custom .ini file
    # and mount it like this (example for Apache-based image):
    # - ./php.ini:/usr/local/etc/php/conf.d/uploads.ini

volumes:
  db_data: # Define the named volume for database persistence
